apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.getbouncer:base:1.0.5108'
    implementation 'com.getbouncer:cardscan:1.0.5108'
}

group = 'com.smartitventures.test'
version = '1.0.0'

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavaDocs(type: Javadoc){
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavaDocsJar(type: Jar) {
    from generateJavaDocs.destinationDir
    classifier 'javadoc'
}
generateJavaDocsJar.dependsOn generateJavaDocs

bintray {
    user = 'charanveerg'
    key = 'd7275db9b233c7adc19d6a0721aa8ddbb2f397a2'
    pkg {
        repo = 'Testing'
        name = 'Testing-Name'

        version {
            name = '1.0.0'
            desc = 'this library used for session management'
            released  = new Date()
            vcsTag = '1.0.0'
        }

        licenses = ['Apache-2.0']

        vcsUrl = 'https://github.com/charanveer13/dummyLibrary.git'
        websiteUrl = 'https://github.com/charanveer13/dummyLibrary'
    }
    configurations = ['archives']
}

artifacts {
    archives generateJavaDocsJar
    archives generateSourcesJar
}